syntax = "proto2";
package cp;

message Render {
  optional int32 height = 1;
  optional int32 width = 2;
  optional bytes png_bytes = 3;
}

message State {
  // 7d cart pose (px, py, pz, oa, ob, oc, od)
  repeated float cart_pose = 1;
  // 7d pole pose (px, py, pz, oa, ob, oc, od)
  repeated float pole_pose = 2;
  // 1+ renders, depending on number of cameras
  repeated Render render = 3;
}

// Event corresponds to output from one step of simulation
// e.g. step(action) -> state, reward, done.
// For env.reset case event has state but no action, reward
// or is_terminal.
// Assume last event in episode is terminal event (done=True)
message Event {
  // N dimensional action
  repeated float action = 1;
  // 1 or more states based on action_repeats
  repeated State state = 2;
  // single reward value
  optional float reward = 3;
}

message Episode {
  repeated Event event = 1;
}
